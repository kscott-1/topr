[{"path":"https://kscott-1.github.io/topr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed. version GNU Lesser General Public License incorporates terms conditions version 3 GNU General Public License, supplemented additional permissions listed .","code":""},{"path":"https://kscott-1.github.io/topr/LICENSE.html","id":"id_0-additional-definitions","dir":"","previous_headings":"","what":"0. Additional Definitions","title":"GNU Lesser General Public License","text":"used herein, “License” refers version 3 GNU Lesser General Public License, “GNU GPL” refers version 3 GNU General Public License. “Library” refers covered work governed License, Application Combined Work defined . “Application” work makes use interface provided Library, otherwise based Library. Defining subclass class defined Library deemed mode using interface provided Library. “Combined Work” work produced combining linking Application Library. particular version Library Combined Work made also called “Linked Version”. “Minimal Corresponding Source” Combined Work means Corresponding Source Combined Work, excluding source code portions Combined Work , considered isolation, based Application, Linked Version. “Corresponding Application Code” Combined Work means object code /source code Application, including data utility programs needed reproducing Combined Work Application, excluding System Libraries Combined Work.","code":""},{"path":"https://kscott-1.github.io/topr/LICENSE.html","id":"id_1-exception-to-section-3-of-the-gnu-gpl","dir":"","previous_headings":"","what":"1. Exception to Section 3 of the GNU GPL","title":"GNU Lesser General Public License","text":"may convey covered work sections 3 4 License without bound section 3 GNU GPL.","code":""},{"path":"https://kscott-1.github.io/topr/LICENSE.html","id":"id_2-conveying-modified-versions","dir":"","previous_headings":"","what":"2. Conveying Modified Versions","title":"GNU Lesser General Public License","text":"modify copy Library, , modifications, facility refers function data supplied Application uses facility (argument passed facility invoked), may convey copy modified version: ) License, provided make good faith effort ensure , event Application supply function data, facility still operates, performs whatever part purpose remains meaningful, b) GNU GPL, none additional permissions License applicable copy.","code":""},{"path":"https://kscott-1.github.io/topr/LICENSE.html","id":"id_3-object-code-incorporating-material-from-library-header-files","dir":"","previous_headings":"","what":"3. Object Code Incorporating Material from Library Header Files","title":"GNU Lesser General Public License","text":"object code form Application may incorporate material header file part Library. may convey object code terms choice, provided , incorporated material limited numerical parameters, data structure layouts accessors, small macros, inline functions templates (ten fewer lines length), following: ) Give prominent notice copy object code Library used Library use covered License. b) Accompany object code copy GNU GPL license document.","code":""},{"path":"https://kscott-1.github.io/topr/LICENSE.html","id":"id_4-combined-works","dir":"","previous_headings":"","what":"4. Combined Works","title":"GNU Lesser General Public License","text":"may convey Combined Work terms choice , taken together, effectively restrict modification portions Library contained Combined Work reverse engineering debugging modifications, also following: ) Give prominent notice copy Combined Work Library used Library use covered License. b) Accompany Combined Work copy GNU GPL license document. c) Combined Work displays copyright notices execution, include copyright notice Library among notices, well reference directing user copies GNU GPL license document. d) one following: 0) Convey Minimal Corresponding Source terms License, Corresponding Application Code form suitable , terms permit, user recombine relink Application modified version Linked Version produce modified Combined Work, manner specified section 6 GNU GPL conveying Corresponding Source. 1) Use suitable shared library mechanism linking Library. suitable mechanism one () uses run time copy Library already present user’s computer system, (b) operate properly modified version Library interface-compatible Linked Version. e) Provide Installation Information, otherwise required provide information section 6 GNU GPL, extent information necessary install execute modified version Combined Work produced recombining relinking Application modified version Linked Version. (use option 4d0, Installation Information must accompany Minimal Corresponding Source Corresponding Application Code. use option 4d1, must provide Installation Information manner specified section 6 GNU GPL conveying Corresponding Source.)","code":""},{"path":"https://kscott-1.github.io/topr/LICENSE.html","id":"id_5-combined-libraries","dir":"","previous_headings":"","what":"5. Combined Libraries","title":"GNU Lesser General Public License","text":"may place library facilities work based Library side side single library together library facilities Applications covered License, convey combined library terms choice, following: ) Accompany combined library copy work based Library, uncombined library facilities, conveyed terms License. b) Give prominent notice combined library part work based Library, explaining find accompanying uncombined form work.","code":""},{"path":"https://kscott-1.github.io/topr/LICENSE.html","id":"id_6-revised-versions-of-the-gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"6. Revised Versions of the GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Free Software Foundation may publish revised /new versions GNU Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library received specifies certain numbered version GNU Lesser General Public License “later version” applies , option following terms conditions either published version later version published Free Software Foundation. Library received specify version number GNU Lesser General Public License, may choose version GNU Lesser General Public License ever published Free Software Foundation. Library received specifies proxy can decide whether future versions GNU Lesser General Public License shall apply, proxy’s public statement acceptance version permanent authorization choose version Library.","code":""},{"path":"https://kscott-1.github.io/topr/articles/locuszoom.html","id":"obtaining-ld-r2-values-for-locuszoom-plot","dir":"Articles","previous_headings":"","what":"Obtaining LD R2 values for Locuszoom plot","title":"Locuszoom plot examples","text":"always R2 values already included results data. Extract snp interest rs7713270, inbuilt CD_UKBB dataset. Retrieve R2 values LDlinkR::LDproxy() Run LDproxy get variants correlated rs7713270. Use European (EUR) 1000 Genomes Project population genome build GRCh38. Note! able run LDproxy, register get token (see https://ldlink.nih.gov/?tab=apiaccess). Plot locuszoom function Join output LDproxy CD_UKBB dataset get p-values plotting.","code":"lead_snp <- CD_UKBB %>%   dplyr::filter(ID == \"rs7713270\")  snp <- paste0(lead_snp$CHROM,\":\",lead_snp$POS) SNP <- LDlinkR::LDproxy(   snp = snp,   pop = \"EUR\",   r2d = \"r2\",   token = \"NULL\",   genome_build = paste0(\"grch\", \"38\") ) LD.link <- SNP %>%    dplyr::mutate(CHROM = stringr::str_extract(Coord, \"chr[^:]*\")) %>%   dplyr::mutate(POS = as.numeric(stringr::str_extract(Coord, \"(?<=:)[0-9]*\"))) %>%     dplyr::select(CHROM, POS, R2) snps.ld <- dplyr::inner_join(CD_UKBB, LD.link, by = c(\"CHROM\", \"POS\"))  locuszoom(snps.ld)"},{"path":"https://kscott-1.github.io/topr/articles/topr.html","id":"exploration-with-built-in-data","dir":"Articles","previous_headings":"","what":"Exploration with built-in data","title":"Getting started with topr","text":"package comes 3 sample datasets, namely CD_UKBB, CD_FINNGEN & UC_UKBB. Let’s look CD_UKBB dataset: Note extra columns sample data, columns required plotting CHROM, POS P.","code":"#>   CHROM     POS          ID       REF ALT           P       OR      AF #> 1  chr1 1006415 rs145588482 TGGCAGCTC   T 0.000468758 0.583384 0.01293 #> 2  chr1 1007256  rs76233940         G   A 0.000401567 0.579783 0.01301 #> 3  chr1 1341559 rs376494450         C   T 0.000151216 1.320130 0.02706 #> 4  chr1 1480224  rs71628972         A   G 0.000760160 1.412750 0.01319 #> 5  chr1 2035619 rs111334586         C   T 0.000920615 1.413370 0.01209 #> 6  chr1 2213349    rs262695         A   G 0.000881453 0.904873 0.32073"},{"path":"https://kscott-1.github.io/topr/articles/topr.html","id":"single-dataset-plotting","dir":"Articles","previous_headings":"Exploration with built-in data","what":"Single dataset plotting","title":"Getting started with topr","text":"","code":"manhattan(CD_UKBB) manhattan(CD_UKBB, annotate=5e-9) regionplot(CD_UKBB, gene=\"IL23R\") #> [1] \"Zoomed to region:  1:67038907-67359979\""},{"path":"https://kscott-1.github.io/topr/articles/topr.html","id":"multiple-dataset-plotting","dir":"Articles","previous_headings":"Exploration with built-in data","what":"Multiple dataset plotting","title":"Getting started with topr","text":"addition plotting single dataset, topr can also plot multiple datasets single manhattan/region plot.","code":"manhattan(list(CD_UKBB, CD_FINNGEN), legend_labels = c(\"UKBB\", \"FinnGen\")) regionplot(list(CD_UKBB, CD_FINNGEN), gene=\"IL23R\", legend_labels = c(\"UKBB\", \"FinnGen\")) #> [1] \"Zoomed to region:  1:67038907-67359979\""},{"path":"https://kscott-1.github.io/topr/articles/topr.html","id":"other-useful-functions","dir":"Articles","previous_headings":"Exploration with built-in data","what":"Other useful functions","title":"Getting started with topr","text":"Extract lead/index variants GWAS dataset (CD_UKBB): Annotate lead/index variants nearest gene & biotype: Get genomic coordinates gene (topr uses genome build GRCh38.p13 default): Get genomic coordinates gene using genome build GRCh37 instead. Get snps within region: Get top variant chromosome: Create snpset extracting top/lead variants CD_UKBB dataset overlapping variants (position) CD_FINNGEN dataset.","code":"get_lead_snps(CD_UKBB) %>%   dplyr::arrange(P) %>%   head() #>     CHROM      POS          ID REF ALT           P       OR      AF #> 6.1  chr6 31660620 rs148844907   T   A 1.47082e-24 2.433450 0.01034 #> 6.2  chr6 32205822 rs138753323   T   C 7.13519e-24 1.844850 0.02882 #> 16  chr16 50729867   rs2066847   G  GC 7.36933e-24 2.142320 0.01588 #> 1.1  chr1 67216513  rs11576518   G   A 8.03684e-20 0.777437 0.44081 #> 6.3  chr6 32708532 rs144614916   A   C 1.27821e-15 1.801210 0.01997 #> 7    chr7 50274703   rs2219345   T   G 8.52335e-14 1.230940 0.59313 get_lead_snps(CD_UKBB) %>%   annotate_with_nearest_gene() %>%   dplyr::arrange(P) %>%   head() #>     CHROM      POS          ID REF ALT           P       OR      AF Gene_Symbol #> 6.1  chr6 31660620 rs148844907   T   A 1.47082e-24 2.433450 0.01034     C6orf47 #> 6.2  chr6 32205822 rs138753323   T   C 7.13519e-24 1.844850 0.02882      NOTCH4 #> 16  chr16 50729867   rs2066847   G  GC 7.36933e-24 2.142320 0.01588        NOD2 #> 1.1  chr1 67216513  rs11576518   G   A 8.03684e-20 0.777437 0.44081    C1orf141 #> 6.3  chr6 32708532 rs144614916   A   C 1.27821e-15 1.801210 0.01997     MTCO3P1 #> 7    chr7 50274703   rs2219345   T   G 8.52335e-14 1.230940 0.59313       IKZF1 #>                    biotype #> 6.1         protein_coding #> 6.2         protein_coding #> 16          protein_coding #> 1.1         protein_coding #> 6.3 unprocessed_pseudogene #> 7           protein_coding get_gene_coords(\"IL23R\") #>   chrom gene_start gene_end gene_symbol        biotype #> 1     1   67138907 67259979       IL23R protein_coding get_gene_coords(\"IL23R\", build=\"37\") #>   chrom gene_start gene_end gene_symbol        biotype #> 1     1   67632083 67725662       IL23R protein_coding get_snps_within_region(CD_UKBB, region=\"chr1:67138906-67259979\") %>%   head() #>   CHROM      POS         ID REF ALT           P       OR      AF #> 1  chr1 67139451 rs10789224   T   C 3.11449e-09 0.837104 0.31415 #> 2  chr1 67140456  rs1158199   T   C 3.65767e-04 1.101210 0.53528 #> 3  chr1 67141399  rs9729046   C   G 3.91140e-06 0.875025 0.34477 #> 4  chr1 67141452   rs736197   G   T 3.91082e-06 0.875021 0.34477 #> 5  chr1 67142417 rs11582178   C   T 5.10929e-10 0.613183 0.04768 #> 6  chr1 67143664   rs963427   A   G 3.36454e-06 0.874194 0.34362 get_top_snp(CD_UKBB, chr=\"chr1\") #>   CHROM      POS         ID REF ALT           P       OR      AF #> 1  chr1 67216513 rs11576518   G   A 8.03684e-20 0.777437 0.44081 get_snpset(CD_UKBB, CD_FINNGEN) #> $matched #>   CHROM       POS REF1 ALT1          P1        E1 REF2 ALT2          P2 #> 1     1 206770623    C    A 7.85424e-09 0.2021732    C    A 1.22098e-04 #> 2    16  50729867    G   GC 7.36933e-24 0.7618894    G   GC 1.49882e-09 #> 3     5  40439961    C    T 7.42668e-11 0.1818381    C    T 2.80350e-13 #> 4     5 159399784    C    A 7.12812e-09 0.1680029    C    A 2.37432e-05 #> 5     1  67216513    A    G 8.03684e-20 0.2517527    A    G 1.04321e-08 #>         E2         ID Gene_Symbol        biotype #> 1 0.130601  rs3024493        IL10 protein_coding #> 2 0.530875  rs2066847        NOD2 protein_coding #> 3 0.187984  rs7713270       TTC33 protein_coding #> 4 0.114921  rs6871626       IL12B protein_coding #> 5 0.146556 rs11576518    C1orf141 protein_coding #>  #> $snp_not_found_in_df2 #>     CHROM       POS REF1 ALT1          P1         E1      ID_tmp #> 2.2     2  39590816    G    C 2.13296e-08  0.1589079  2_39590816 #> 2.1     2 233237298    A    C 1.70216e-09  0.1628839 2_233237298 #> 6.1     6  31660620    T    A 1.47082e-24  0.8893100  6_31660620 #> 6.2     6  32205822    T    C 7.13519e-24  0.6123980  6_32205822 #> 6.3     6  32708532    A    C 1.27821e-15  0.5884587  6_32708532 #> 7       7  50274703    T    G 8.52335e-14  0.2077781  7_50274703 #> 9       9   4984530    G    C 5.03745e-11 -0.1833112   9_4984530 #>  #> $snp_found_different_alleles_in_df2 #>  [1] CHROM  POS    REF1   ALT1   P1     E1     REF2   ALT2   P2     E2     #> [11] ID     ID_tmp #> <0 rows> (or 0-length row.names)"},{"path":"https://kscott-1.github.io/topr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thorhildur Juliusdottir. Copyright holder, author, maintainer. Andri Stefansson. Author.","code":""},{"path":"https://kscott-1.github.io/topr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Juliusdottir T, Stefansson (2024). topr: Create Custom Plots Viewing Genetic Association Results. R package version 2.0.2, https://kscott-1.github.io/topr/, https://github.com/totajuliusd/topr.","code":"@Manual{,   title = {topr: Create Custom Plots for Viewing Genetic Association Results},   author = {Thorhildur Juliusdottir and Andri Stefansson},   year = {2024},   note = {R package version 2.0.2, https://kscott-1.github.io/topr/},   url = {https://github.com/totajuliusd/topr}, }"},{"path":[]},{"path":"https://kscott-1.github.io/topr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Create Custom Plots for Viewing Genetic Association Results","text":"topr package viewing annotating genetic association results. See GIF example functionality visit website additional information vignettes.","code":"library(topr)  # Single GWAS manhattan plots # Start by taking a look at one of topr's inbuilt datasets CD_UKBB %>% head() manhattan(CD_UKBB) manhattan(CD_UKBB, annotate=5e-9) CD_UKBB %>% get_lead_snps() CD_UKBB %>% get_lead_snps() %>% annotate_with_nearest_gene() manhattan(CD_UKBB, annotate=1e-9, highlight_genes=c(\"FTO\",\"THADA\")) manhattan(CD_UKBB, annotate=1e-9, highlight_genes=c(\"FTO\",\"THADA\"), color=\"darkred\")  # Multi GWAS manhattan/miami plots CD_FINNGEN %>% head() manhattan(list(CD_UKBB, CD_FINNGEN)) manhattan(list(CD_UKBB, CD_FINNGEN), legend_labels=c(\"UKBB\",\"FINNGEN\")) manhattan(list(CD_UKBB, CD_FINNGEN), legend_labels=c(\"UKBB\",\"FINNGEN\"), ntop=1)   # Add the third GWAS result...  UC_UKBB %>% head() manhattan(list(CD_UKBB, CD_FINNGEN, UC_UKBB)) manhattan(list(CD_UKBB, CD_FINNGEN, UC_UKBB), legend_labels=c(\"CD UKBB\",\"CD FINNGEN\", \"UC UKBB\")) # display the first input dataset on the top plot (ntop = 1) manhattan(list(CD_UKBB, CD_FINNGEN, UC_UKBB), legend_labels=c(\"CD UKBB\",\"CD FINNGEN\", \"UC UKBB\"), ntop=1) # display the first TWO input datasets on the top plot (ntop = 2) manhattan(list(CD_UKBB, CD_FINNGEN, UC_UKBB), legend_labels=c(\"CD UKBB\",\"CD FINNGEN\", \"UC UKBB\"), ntop=2) manhattan(list(CD_UKBB, CD_FINNGEN, UC_UKBB), legend_labels=c(\"CD UKBB\",\"CD FINNGEN\", \"UC UKBB\"), ntop=2, annotate=1e-12) #apply different annotation thresholds to the three datasets ( annotate = c(5e-9,1e-12,1e-15) ) manhattan(list(CD_UKBB, CD_FINNGEN, UC_UKBB), legend_labels=c(\"CD UKBB\",\"CD FINNGEN\", \"UC UKBB\"), ntop=2, annotate=c(5e-9,1e-12,1e-15))  # Make the plot look prettier by resetting they scales of the x and y  axes, changing the angle of the annotation text (angle = 90), moving it up a bit (nudge_y = 12) and slightly reducing the size of all text (scale = 0.7) manhattan(list(CD_UKBB, CD_FINNGEN, UC_UKBB), legend_labels=c(\"CD UKBB\",\"CD FINNGEN\", \"UC UKBB\"), ntop=2, annotate=c(5e-9,1e-12,1e-15), ymax=65, ymin=-55, nudge_y=12,angle=90, scale=0.7) # The same plot as above in the old topr grey theme (theme_grey = T) manhattan(list(CD_UKBB, CD_FINNGEN, UC_UKBB), legend_labels=c(\"CD UKBB\",\"CD FINNGEN\", \"UC UKBB\"), ntop=2, annotate=c(5e-9,1e-12,1e-15), ymax=65, ymin=-55, nudge_y=12,angle=90, scale=0.7, theme_grey = T)"},{"path":"https://kscott-1.github.io/topr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Create Custom Plots for Viewing Genetic Association Results","text":"Please cite following paper use topr publication: Juliusdottir, T. topr: R package viewing annotating genetic association results. BMC Bioinformatics 24, 268 (2023). https://doi.org/10.1186/s12859-023-05301-4","code":""},{"path":"https://kscott-1.github.io/topr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Custom Plots for Viewing Genetic Association Results","text":"Install CRAN: github: load package:","code":"install.packages(\"topr\") devtools::install_github(\"totajuliusd/topr\") library(topr)"},{"path":"https://kscott-1.github.io/topr/reference/CD_FINNGEN.html","id":null,"dir":"Reference","previous_headings":"","what":"Finngen r7 Crohn‘s disease (K11_CROHNS) — CD_FINNGEN","title":"Finngen r7 Crohn‘s disease (K11_CROHNS) — CD_FINNGEN","text":"Dataset retrieved Finngen database (version 7) including 3147 crohn´s cases (K50) 296,100 controls. dataset filtered variants P <1e-03. FinnGen data publicly available downloaded https://finngen.fi.","code":""},{"path":"https://kscott-1.github.io/topr/reference/CD_FINNGEN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finngen r7 Crohn‘s disease (K11_CROHNS) — CD_FINNGEN","text":"","code":"CD_FINNGEN"},{"path":"https://kscott-1.github.io/topr/reference/CD_FINNGEN.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Finngen r7 Crohn‘s disease (K11_CROHNS) — CD_FINNGEN","text":"data frame  32,303 rows 8 variables: CHROM Chromosome, written example chr1 1 POS genetic position variant REF reference allele ALT alternative allele P P-value Plink run, additive model, regression model GLM_FIRTH BETA Variant effect ID Variant identifier, e.g. rsid AF Allele frequency","code":""},{"path":"https://kscott-1.github.io/topr/reference/CD_FINNGEN.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Finngen r7 Crohn‘s disease (K11_CROHNS) — CD_FINNGEN","text":"Crohn's K50 (K11_CROHNS), including variants P<1e-03","code":""},{"path":"https://kscott-1.github.io/topr/reference/CD_UKBB.html","id":null,"dir":"Reference","previous_headings":"","what":"UKBB Crohns disease (ICD 10 code K50) — CD_UKBB","title":"UKBB Crohns disease (ICD 10 code K50) — CD_UKBB","text":"Dataset retrieved UK biobank consisting 2,799 crohn´s cases (K50) 484,515 controls. dataset filtered variants P <1e-03.","code":""},{"path":"https://kscott-1.github.io/topr/reference/CD_UKBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UKBB Crohns disease (ICD 10 code K50) — CD_UKBB","text":"","code":"CD_UKBB"},{"path":"https://kscott-1.github.io/topr/reference/CD_UKBB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UKBB Crohns disease (ICD 10 code K50) — CD_UKBB","text":"data frame  21,717 rows 8 variables: CHROM Chromosome, written example chr1 1 POS genetic position variant REF reference allele ALT alternative allele ID Variant identifier, e.g. rsid P P-value Plink run, additive model, regression model GLM_FIRTH Odds Ratio AF Allele frequency","code":""},{"path":"https://kscott-1.github.io/topr/reference/CD_UKBB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UKBB Crohns disease (ICD 10 code K50) — CD_UKBB","text":"Crohn's UKBB ICD10 code K50, including variants P<1e-03","code":""},{"path":"https://kscott-1.github.io/topr/reference/R2_CD_UKBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset including the R2 column for the locuszoom plot function — R2_CD_UKBB","title":"Example dataset including the R2 column for the locuszoom plot function — R2_CD_UKBB","text":"dataset subset CD_UKBB includes variants near IL23R gene chromosome 1","code":""},{"path":"https://kscott-1.github.io/topr/reference/R2_CD_UKBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset including the R2 column for the locuszoom plot function — R2_CD_UKBB","text":"","code":"R2_CD_UKBB"},{"path":"https://kscott-1.github.io/topr/reference/R2_CD_UKBB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset including the R2 column for the locuszoom plot function — R2_CD_UKBB","text":"data frame  329 rows 5 variables: CHROM Chromosome, written example chr1 1 POS genetic position variant ID Variant identifier, e.g. rsid P P-value Plink run, additive model, regression model GLM_FIRTH R2 variant correlation (r^2)","code":""},{"path":"https://kscott-1.github.io/topr/reference/R2_CD_UKBB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example dataset including the R2 column for the locuszoom plot function — R2_CD_UKBB","text":"subset CD_UKBB dataset","code":""},{"path":"https://kscott-1.github.io/topr/reference/UC_UKBB.html","id":null,"dir":"Reference","previous_headings":"","what":"UKBB Ulcerative colitis (ICD 10 code K51) — UC_UKBB","title":"UKBB Ulcerative colitis (ICD 10 code K51) — UC_UKBB","text":"Dataset retrieved UK biobank including 5,452 UC cases (K51) 481,862 controls. dataset filtered variants P<1e-03.","code":""},{"path":"https://kscott-1.github.io/topr/reference/UC_UKBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UKBB Ulcerative colitis (ICD 10 code K51) — UC_UKBB","text":"","code":"UC_UKBB"},{"path":"https://kscott-1.github.io/topr/reference/UC_UKBB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UKBB Ulcerative colitis (ICD 10 code K51) — UC_UKBB","text":"data frame  45,012 rows 8 variables CHROM Chromosome, written example chr1 1 POS genetic position variant REF reference allele ALT alternative allele ID Variant identifier, e.g. rsid P P-value Plink run, additive model, regression model GLM_FIRTH Odds Ratio AF Allele frequency","code":""},{"path":"https://kscott-1.github.io/topr/reference/UC_UKBB.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UKBB Ulcerative colitis (ICD 10 code K51) — UC_UKBB","text":"Ulcerative Colitis UKBB ICD10 code K51, including variants P<1e-03","code":""},{"path":"https://kscott-1.github.io/topr/reference/annotate_with_nearest_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the nearest gene for one or more snps — annotate_with_nearest_gene","title":"Get the nearest gene for one or more snps — annotate_with_nearest_gene","text":"annotate_with_nearest_gene() Annotate variant/snp nearest gene Required parameters dataframe SNPs (columns CHROM POS)","code":""},{"path":"https://kscott-1.github.io/topr/reference/annotate_with_nearest_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the nearest gene for one or more snps — annotate_with_nearest_gene","text":"","code":"annotate_with_nearest_gene(   variants,   protein_coding_only = FALSE,   build = 38,   .chr_map = NULL )"},{"path":"https://kscott-1.github.io/topr/reference/annotate_with_nearest_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the nearest gene for one or more snps — annotate_with_nearest_gene","text":"variants dataframe variant positions (CHROM POS) protein_coding_only Logical, set TRUE annotate protein coding genes (default value FALSE) build number representing genome build. Set 37 change build (GRCh37). default build 38 (GRCh38). .chr_map internally used list maps chromosome names numbers.","code":""},{"path":"https://kscott-1.github.io/topr/reference/annotate_with_nearest_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the nearest gene for one or more snps — annotate_with_nearest_gene","text":"input dataframe Gene_Symbol additional column","code":""},{"path":"https://kscott-1.github.io/topr/reference/annotate_with_nearest_gene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the nearest gene for one or more snps — annotate_with_nearest_gene","text":"","code":"if (FALSE) { # \\dontrun{ variants <-get_lead_snps(CD_UKBB) annotate_with_nearest_gene(variants) } # }"},{"path":"https://kscott-1.github.io/topr/reference/create_snpset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataframe that can be used as input for making effect plots — create_snpset","title":"Create a dataframe that can be used as input for making effect plots — create_snpset","text":"create_snpset() method deprecated removed future versions. use get_snpset instead.","code":""},{"path":"https://kscott-1.github.io/topr/reference/create_snpset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataframe that can be used as input for making effect plots — create_snpset","text":"","code":"create_snpset(   df1,   df2,   thresh = 1e-08,   protein_coding_only = TRUE,   region_size = 1e+06,   verbose = F )"},{"path":"https://kscott-1.github.io/topr/reference/create_snpset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataframe that can be used as input for making effect plots — create_snpset","text":"df1 dataframe extract top snps (p-value thresh) df2 dataframe search overlapping SNPs dataframe1 thresh Numeric, p-value threshold used extracting top snps dataset 1 protein_coding_only Logical, set variable TRUE use protein_coding genes annotation region_size Integer, size interval extract top snps verbose Logical, (default: FALSE). Assign TRUE get information alleles matched .","code":""},{"path":"https://kscott-1.github.io/topr/reference/create_snpset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataframe that can be used as input for making effect plots — create_snpset","text":"Dataframe containing top hit","code":""},{"path":"https://kscott-1.github.io/topr/reference/create_snpset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dataframe that can be used as input for making effect plots — create_snpset","text":"","code":"if (FALSE) { # \\dontrun{ create_snpset(CD_UKBB,CD_FINNGEN, thresh=1e-09) } # }"},{"path":"https://kscott-1.github.io/topr/reference/create_snpset_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the code/functions used to create a snpset — create_snpset_code","title":"Show the code/functions used to create a snpset — create_snpset_code","text":"method deprecated removed future versions. use get_snpset_code instead. create_snpset_code()","code":""},{"path":"https://kscott-1.github.io/topr/reference/create_snpset_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the code/functions used to create a snpset — create_snpset_code","text":"","code":"create_snpset_code()"},{"path":"https://kscott-1.github.io/topr/reference/create_snpset_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the code/functions used to create a snpset — create_snpset_code","text":"Dataframe containing top hit","code":""},{"path":"https://kscott-1.github.io/topr/reference/create_snpset_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the code/functions used to create a snpset — create_snpset_code","text":"","code":"if (FALSE) { # \\dontrun{ create_snpset_code() } # }"},{"path":"https://kscott-1.github.io/topr/reference/effect_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plot comparing effects within two datasets — effect_plot","title":"Create a plot comparing effects within two datasets — effect_plot","text":"effect_plot() method deprecated removed future versions. use effectplot instead.","code":""},{"path":"https://kscott-1.github.io/topr/reference/effect_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plot comparing effects within two datasets — effect_plot","text":"","code":"effect_plot(   dat,   pheno_x = \"pheno_x\",   pheno_y = \"pheno_\",   annotate_with = \"Gene_Symbol\",   thresh = 1e-08,   ci_thresh = 1,   gene_label_thresh = 1e-08,   color = get_topr_colors()[1],   scale = 1 )"},{"path":"https://kscott-1.github.io/topr/reference/effect_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plot comparing effects within two datasets — effect_plot","text":"dat input dataframe (snpset) containing one row per variant P values (P1 P2) effects (E1 E2) two datasets/phenotypes pheno_x string representing name phenotype whose effect plotted x axis pheno_y string representing name phenotype whose effect plotted y axis annotate_with string, name column contains label datapoints (default value Gene_Symbol) thresh number. Threshold cutoff, datapoints P2 threshold shown filled circles whereas datapoints P2 threshold shown open circles ci_thresh number.Show confidence intervals P-value threshold gene_label_thresh string, label datapoints P2 threshold color string, default value first topr colors scale number, change size title axes labels ticks time (default = 1)","code":""},{"path":"https://kscott-1.github.io/topr/reference/effect_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a plot comparing effects within two datasets — effect_plot","text":"","code":"if (FALSE) { # \\dontrun{ effect_plot(dat) } # }"},{"path":"https://kscott-1.github.io/topr/reference/effectplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plot comparing variant effects in two datasets — effectplot","title":"Create a plot comparing variant effects in two datasets — effectplot","text":"effectplot()","code":""},{"path":"https://kscott-1.github.io/topr/reference/effectplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plot comparing variant effects in two datasets — effectplot","text":"","code":"effectplot(   df,   pheno_x = \"x_pheno\",   pheno_y = \"y_pheno\",   annotate_with = \"Gene_Symbol\",   thresh = 5e-08,   ci_thresh = 1,   gene_label_thresh = 5e-08,   color = get_topr_colors()[1],   scale = 1,   build = 38,   label_fontface = \"italic\",   label_family = \"\",   nudge_y = 0.001,   nudge_x = 0.001,   size = 2,   segment.size = 0.2,   segment.linetype = \"solid\",   segment.color = \"transparent\",   angle = 0,   title = NULL,   axis_text_size = 10,   axis_title_size = 12,   title_text_size = 13,   subtitle_text_size = 11,   gene_label_size = 3.2,   snpset_thresh = 5e-08,   snpset_region_size = 1e+06,   max.overlaps = 10,   annotate = 0,   label_color = NULL )"},{"path":"https://kscott-1.github.io/topr/reference/effectplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plot comparing variant effects in two datasets — effectplot","text":"df input dataframe (snpset) containing one row per variant P values (P1 P2) effects (E1 E2) two datasets/phenotypes list containing two datasets. pheno_x string representing name phenotype whose effect plotted x axis pheno_y string representing name phenotype whose effect plotted y axis annotate_with string, name column contains label datapoints (default value Gene_Symbol) thresh number. Threshold cutoff, datapoints P2 threshold shown filled circles whereas datapoints P2 threshold shown open circles ci_thresh number.Show confidence intervals P-value threshold gene_label_thresh Deprecated: number, label datapoints P2 threshold color string, default value first topr colors scale number, change size title axes labels ticks time (default : 1) build number representing genome build data frame. Set 37 change build (GRCh37). default build 38 (GRCh38). label_fontface string vector strings. Label font “plain”, “bold”, “italic”, “bold.italic” (ggrepel argument) label_family string vector strings. Label font name (default ggrepel argument \"\") nudge_y number horizontally adjust starting position gene label (ggrepel parameter) nudge_x number vertically adjust starting position gene label (ggrepel parameter) size number vector numbers, setting size plot points (default: size=1.2) segment.size line segment color (ggrepel argument) segment.linetype line segment solid, dashed, etc.(ggrepel argument) segment.color line segment thickness (ggrepel argument) angle number, angle text label title string set plot title axis_text_size number, size x y axes tick labels (default: 12) axis_title_size number, size x y title labels (default: 12) title_text_size number, size plot title (default: 13) subtitle_text_size number setting text size subtitle (default: 11) gene_label_size number setting size gene labels shown bottom plot snpset_thresh number representing threshold used create snpset used plotting (applicable input dataframe list containing two datasets) snpset_region_size number representing region size use creating snpset used plotting (applicable input dataframe list containing two datasets) max.overlaps Exclude text labels overlap many things. Defaults 10 (ggrepel argument) annotate number, label datapoints p-value number (second df) nearest gene label_color string vector strings. change color gene variant labels","code":""},{"path":"https://kscott-1.github.io/topr/reference/effectplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a plot comparing variant effects in two datasets — effectplot","text":"ggplot object","code":""},{"path":"https://kscott-1.github.io/topr/reference/effectplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a plot comparing variant effects in two datasets — effectplot","text":"","code":"if (FALSE) { # \\dontrun{ effectplot(list(CD_UKBB, CD_FINNGEN)) } # }"},{"path":"https://kscott-1.github.io/topr/reference/flip_to_positive_allele_for_dat1.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip to the positive allele for dataset 1 — flip_to_positive_allele_for_dat1","title":"Flip to the positive allele for dataset 1 — flip_to_positive_allele_for_dat1","text":"flip_to_positive_allele_for_dat1()","code":""},{"path":"https://kscott-1.github.io/topr/reference/flip_to_positive_allele_for_dat1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip to the positive allele for dataset 1 — flip_to_positive_allele_for_dat1","text":"","code":"flip_to_positive_allele_for_dat1(df)"},{"path":"https://kscott-1.github.io/topr/reference/flip_to_positive_allele_for_dat1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip to the positive allele for dataset 1 — flip_to_positive_allele_for_dat1","text":"df dataframe snpset format (like returned get_snpset() function)","code":""},{"path":"https://kscott-1.github.io/topr/reference/flip_to_positive_allele_for_dat1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip to the positive allele for dataset 1 — flip_to_positive_allele_for_dat1","text":"input dataframe flipping positive effect allele dataframe 1","code":""},{"path":"https://kscott-1.github.io/topr/reference/flip_to_positive_allele_for_dat1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip to the positive allele for dataset 1 — flip_to_positive_allele_for_dat1","text":"","code":"if (FALSE) { # \\dontrun{ CD_UKBB_index_snps <- get_lead_snps(CD_UKBB) snpset <- get_snpset(CD_UKBB_index_snps, CD_FINNGEN) flip_to_positive_allele_for_dat1(snpset$matched) } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_best_snp_per_MB.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the index/lead variants — get_best_snp_per_MB","title":"Get the index/lead variants — get_best_snp_per_MB","text":"get_best_snp_per_MB() Get top variants within 1 MB windows genome association p-values given threshold method deprecated removed future versions. use get_lead_snps instead.","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_best_snp_per_MB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the index/lead variants — get_best_snp_per_MB","text":"","code":"get_best_snp_per_MB(   df,   thresh = 5e-09,   region_size = 1e+06,   protein_coding_only = FALSE,   chr = NULL,   .checked = FALSE,   verbose = FALSE )"},{"path":"https://kscott-1.github.io/topr/reference/get_best_snp_per_MB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the index/lead variants — get_best_snp_per_MB","text":"df Dataframe thresh number. P-value threshold, extract variants p-values threshold (5e-09 default) region_size integer (default = 20000000) (string represented 200kb 2MB) indicating window size variant labeling. Increase number sparser annotation decrease denser annotation. protein_coding_only Logical, set variable TRUE use protein_coding genes annotation chr String, get top variants one chromosome , e.g. chr=\"chr1\" .checked Logical, input data already checked, can set TRUE wont checked (FALSE default) verbose Logical, set TRUE get printed information number SNPs extracted","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_best_snp_per_MB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the index/lead variants — get_best_snp_per_MB","text":"Dataframe lead variants. Returns best variant per MB (default, change region size region argument) p-values input threshold (thresh=5e-09 default)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_best_snp_per_MB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the index/lead variants — get_best_snp_per_MB","text":"","code":"if (FALSE) { # \\dontrun{   get_best_snp_per_MB(CD_UKBB) } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the genetic position of a gene by gene name — get_gene","title":"Get the genetic position of a gene by gene name — get_gene","text":"get_gene() Get gene coordinates gene Required parameter gene name method deprecated removed future versions. use get_gene_coords instead.","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the genetic position of a gene by gene name — get_gene","text":"","code":"get_gene(gene_name, chr = NULL, build = 38)"},{"path":"https://kscott-1.github.io/topr/reference/get_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the genetic position of a gene by gene name — get_gene","text":"gene_name string representing gene name (e.g. \"FTO\") chr string, search genes chromosome , (e.g chr=\"chr1\") build string, genome build, choose builds 37 (GRCh37) 38 (GRCh38) (default 38)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the genetic position of a gene by gene name — get_gene","text":"Dataframe gene name genetic coordinates","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_gene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the genetic position of a gene by gene name — get_gene","text":"","code":"if (FALSE) { # \\dontrun{ get_gene(\"FTO\") } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_gene_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the genetic position of a gene by gene name — get_gene_coords","title":"Get the genetic position of a gene by gene name — get_gene_coords","text":"get_gene_coords() Get gene coordinates gene Required parameter gene name","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_gene_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the genetic position of a gene by gene name — get_gene_coords","text":"","code":"get_gene_coords(gene_name, chr = NULL, build = 38)"},{"path":"https://kscott-1.github.io/topr/reference/get_gene_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the genetic position of a gene by gene name — get_gene_coords","text":"gene_name string representing gene name (e.g. \"FTO\") chr string, search genes chromosome , (e.g chr=\"chr1\") build string, genome build, choose builds 37 (GRCh37) 38 (GRCh38) (default 38)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_gene_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the genetic position of a gene by gene name — get_gene_coords","text":"Dataframe gene name genetic coordinates","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_gene_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the genetic position of a gene by gene name — get_gene_coords","text":"","code":"if (FALSE) { # \\dontrun{ get_gene_coords(\"FTO\") } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_genes_by_Gene_Symbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the genetic position of a gene by its gene name — get_genes_by_Gene_Symbol","title":"Get the genetic position of a gene by its gene name — get_genes_by_Gene_Symbol","text":"get_genes_by_Gene_Symbol() Get genes gene symbol/name Required parameters gene name vector gene names","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_genes_by_Gene_Symbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the genetic position of a gene by its gene name — get_genes_by_Gene_Symbol","text":"","code":"get_genes_by_Gene_Symbol(genes, chr = NULL, build = 38)"},{"path":"https://kscott-1.github.io/topr/reference/get_genes_by_Gene_Symbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the genetic position of a gene by its gene name — get_genes_by_Gene_Symbol","text":"genes string vector strings representing gene names, (e.g. \"FTO\")  (c(\"FTO\",\"NOD2\")) chr string, search genes chromosome , (e.g chr=\"chr1\") build string, genome build, choose builds 37 (GRCh37) 38 (GRCh38) (default 38)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_genes_by_Gene_Symbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the genetic position of a gene by its gene name — get_genes_by_Gene_Symbol","text":"Dataframe genes","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_genes_by_Gene_Symbol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the genetic position of a gene by its gene name — get_genes_by_Gene_Symbol","text":"","code":"if (FALSE) { # \\dontrun{   get_genes_by_Gene_Symbol(c(\"FTO\",\"THADA\")) } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_genes_in_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SNPs/variants within region — get_genes_in_region","title":"Get SNPs/variants within region — get_genes_in_region","text":"get_genes_in_region()","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_genes_in_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SNPs/variants within region — get_genes_in_region","text":"","code":"get_genes_in_region(   chr = chr,   xmin = xmin,   xmax = xmax,   protein_coding_only = F,   show_exons = F,   show_genes = T,   build = 38,   region = NULL )"},{"path":"https://kscott-1.github.io/topr/reference/get_genes_in_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SNPs/variants within region — get_genes_in_region","text":"chr string, chromosome (e.g. chr16) xmin integer representing genetic position xmax integer representing genetic position protein_coding_only logical scalar, TRUE, protein coding genes used annotation show_exons Deprecated : logical scalar, show exons instead genes (default show_exons=FALSE) show_genes logical scalar, show genes instead exons (default show_genes=FALSE) build number representing genome build data frame. Set 37 change build (GRCh37). default build 38 (GRCh38). region string representing genetic region (e.g chr16:50693587-50734041)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_genes_in_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get SNPs/variants within region — get_genes_in_region","text":"genes requested region","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_genes_in_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get SNPs/variants within region — get_genes_in_region","text":"","code":"if (FALSE) { # \\dontrun{ get_genes_in_region(region=\"chr16:50593587-50834041\") } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_lead_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the index/lead variants — get_lead_snps","title":"Get the index/lead variants — get_lead_snps","text":"get_lead_snps() Get top variants within 1 MB windows genome association p-values given threshold","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_lead_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the index/lead variants — get_lead_snps","text":"","code":"get_lead_snps(   df,   thresh = 5e-08,   region_size = 1e+06,   protein_coding_only = FALSE,   chr = NULL,   .checked = FALSE,   verbose = NULL,   keep_chr = TRUE )"},{"path":"https://kscott-1.github.io/topr/reference/get_lead_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the index/lead variants — get_lead_snps","text":"df Dataframe thresh number. P-value threshold, extract variants p-values threshold (5e-08 default) region_size integer (default = 20000000) (string represented 200kb 2MB) indicating window size variant labeling. Increase number sparser annotation decrease denser annotation. protein_coding_only Logical, set variable TRUE use protein_coding genes annotation chr String, get top variants one chromosome , e.g. chr=\"chr1\" .checked Logical, input data already checked, can set TRUE wont checked (FALSE default) verbose Logical, set TRUE get printed information number SNPs extracted keep_chr Logical, set FALSE remove \"chr\" prefix chromosome present (TRUE default)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_lead_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the index/lead variants — get_lead_snps","text":"Dataframe lead variants. Returns best variant per MB (default, change region size region argument) p-values input threshold (thresh=5e-08 default)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_lead_snps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the index/lead variants — get_lead_snps","text":"","code":"if (FALSE) { # \\dontrun{ get_lead_snps(CD_UKBB) } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_overlapping_snps_by_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants that overlap between two datasets — get_overlapping_snps_by_pos","title":"Get variants that overlap between two datasets — get_overlapping_snps_by_pos","text":"get_overlapping_snps_by_pos() method deprecated removed future versions. use match_by_pos instead.","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_overlapping_snps_by_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants that overlap between two datasets — get_overlapping_snps_by_pos","text":"","code":"get_overlapping_snps_by_pos(df1, df2, verbose = F)"},{"path":"https://kscott-1.github.io/topr/reference/get_overlapping_snps_by_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variants that overlap between two datasets — get_overlapping_snps_by_pos","text":"df1 dataframe variants, contain CHROM POS df2 dataframe variants, contain CHROM POS verbose logical scalar (default: FALSE). Assign TRUE get information alleles matched .","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_overlapping_snps_by_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants that overlap between two datasets — get_overlapping_snps_by_pos","text":"input dataframe containing variants matched alleles snpset","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_overlapping_snps_by_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get variants that overlap between two datasets — get_overlapping_snps_by_pos","text":"","code":"if (FALSE) { # \\dontrun{ get_overlapping_snps_by_pos(dat1, dat2) } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_sign_and_sugg_loci.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the index/lead variants — get_sign_and_sugg_loci","title":"Get the index/lead variants — get_sign_and_sugg_loci","text":"get_lead_snps() Get top variants within 1 MB windows genome association p-values given threshold","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_sign_and_sugg_loci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the index/lead variants — get_sign_and_sugg_loci","text":"","code":"get_sign_and_sugg_loci(   df,   genome_wide_thresh = 5e-08,   suggestive_thresh = 1e-06,   flank_size = 1e+06,   region_size = 1e+06 )"},{"path":"https://kscott-1.github.io/topr/reference/get_sign_and_sugg_loci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the index/lead variants — get_sign_and_sugg_loci","text":"df Dataframe, GWAS summary statistics genome_wide_thresh number. P-value threshold genome wide significant loci (5e-08 default) suggestive_thresh number. P-value threshold suggestive loci (1e-06 default) flank_size number (default = 1e6). size flanking region significant suggestitve snps. region_size number (default = 1e6). size region top snp search. one snp per region returned.","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_sign_and_sugg_loci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the index/lead variants — get_sign_and_sugg_loci","text":"List genome wide suggestive loci.","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_sign_and_sugg_loci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the index/lead variants — get_sign_and_sugg_loci","text":"","code":"if (FALSE) { # \\dontrun{ get_sign_and_sugg_loci(CD_UKBB) } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_snps_within_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SNPs/variants within region — get_snps_within_region","title":"Get SNPs/variants within region — get_snps_within_region","text":"get_snps_within_region()","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_snps_within_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SNPs/variants within region — get_snps_within_region","text":"","code":"get_snps_within_region(   df,   region,   chr = NULL,   xmin = NULL,   xmax = NULL,   keep_chr = NULL )"},{"path":"https://kscott-1.github.io/topr/reference/get_snps_within_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SNPs/variants within region — get_snps_within_region","text":"df data frame association results columns CHR POS region string representing genetic region (e.g chr16:50693587-50734041) chr string, chromosome (e.g. chr16) xmin integer, include variants POS larger xmin xmax integer, include variants POS smaller xmax keep_chr Deprecated: Logical, set FALSE remove \"chr\" prefix chromosome present (TRUE default)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_snps_within_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get SNPs/variants within region — get_snps_within_region","text":"variants within requested region","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_snps_within_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get SNPs/variants within region — get_snps_within_region","text":"","code":"if (FALSE) { # \\dontrun{ get_snps_within_region(CD_UKBB, \"chr16:50593587-50834041\") } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_snpset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataframe that can be used as input for making effect plots — get_snpset","title":"Create a dataframe that can be used as input for making effect plots — get_snpset","text":"get_snpset()","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_snpset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataframe that can be used as input for making effect plots — get_snpset","text":"","code":"get_snpset(   df1,   df2,   thresh = 5e-08,   protein_coding_only = TRUE,   region_size = 1e+06,   verbose = NULL,   show_full_output = FALSE,   build = 38,   format = \"wide\" )"},{"path":"https://kscott-1.github.io/topr/reference/get_snpset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataframe that can be used as input for making effect plots — get_snpset","text":"df1 dataframe extract top snps (p-value thresh) df2 dataframe search overlapping SNPs dataframe1 thresh number. P-value threshold, extract variants p-values threshold (5e-08 default) protein_coding_only Logical, set variable TRUE use protein_coding genes annotation region_size integer (default = 20000000) (string represented 200kb 2MB) indicating window size variant labeling. Increase number sparser annotation decrease denser annotation. verbose Logical, (default: FALSE). Assign TRUE get information alleles matched . show_full_output logical scalar (default:FALSE). Assign TRUE show full output function build string, genome build, choose builds 37 (GRCh37) 38 (GRCh38) (default 38) format string, representing either wide long format (default : \"wide\"). default snpset created two dataframes returned wide format.","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_snpset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dataframe that can be used as input for making effect plots — get_snpset","text":"Dataframe overlapping snps (snpset)","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_snpset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dataframe that can be used as input for making effect plots — get_snpset","text":"","code":"if (FALSE) { # \\dontrun{ CD_UKBB_index_snps <-get_lead_snps(CD_UKBB) get_snpset(CD_UKBB_index_snps, CD_FINNGEN) } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_snpset_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the code/functions used to get a snpset — get_snpset_code","title":"Show the code/functions used to get a snpset — get_snpset_code","text":"get_snpset_code()","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_snpset_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the code/functions used to get a snpset — get_snpset_code","text":"","code":"get_snpset_code()"},{"path":"https://kscott-1.github.io/topr/reference/get_snpset_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the code/functions used to get a snpset — get_snpset_code","text":"Dataframe containing top hit","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_snpset_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the code/functions used to get a snpset — get_snpset_code","text":"","code":"if (FALSE) { # \\dontrun{ get_snpset_code() } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_top_snp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the top hit from the dataframe — get_top_snp","title":"Get the top hit from the dataframe — get_top_snp","text":"get_top_snp() Get top hit dataframe input parameters optional","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_top_snp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the top hit from the dataframe — get_top_snp","text":"","code":"get_top_snp(df, chr = NULL)"},{"path":"https://kscott-1.github.io/topr/reference/get_top_snp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the top hit from the dataframe — get_top_snp","text":"df Dataframe containing association results chr String, get top hit data frame chromosome. chromosome provided, top hit entire dataset returned.","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_top_snp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the top hit from the dataframe — get_top_snp","text":"Dataframe containing top hit","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_top_snp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the top hit from the dataframe — get_top_snp","text":"","code":"if (FALSE) { # \\dontrun{ get_top_snp(CD_UKBB, chr=\"chr1\") } # }"},{"path":"https://kscott-1.github.io/topr/reference/get_topr_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the top hit from the dataframe — get_topr_colors","title":"Get the top hit from the dataframe — get_topr_colors","text":"get_topr_colors() Get top hit dataframe input parameters optional","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_topr_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the top hit from the dataframe — get_topr_colors","text":"","code":"get_topr_colors()"},{"path":"https://kscott-1.github.io/topr/reference/get_topr_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the top hit from the dataframe — get_topr_colors","text":"Vector colors used plotting","code":""},{"path":"https://kscott-1.github.io/topr/reference/get_topr_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the top hit from the dataframe — get_topr_colors","text":"","code":"if (FALSE) { # \\dontrun{ get_topr_colors() } # }"},{"path":"https://kscott-1.github.io/topr/reference/locuszoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a locuszoom-like plot — locuszoom","title":"Create a locuszoom-like plot — locuszoom","text":"locuszoom() displays association results smaller region within one chromosome. Required parameter least one dataset (dataframe) containing association data (columns CHROM,POS,P upper lowercase)","code":""},{"path":"https://kscott-1.github.io/topr/reference/locuszoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a locuszoom-like plot — locuszoom","text":"","code":"locuszoom(   df,   annotate = NULL,   ntop = 3,   xmin = 0,   size = 2,   shape = 19,   alpha = 1,   label_size = 4,   annotate_with = \"ID\",   color = NULL,   axis_text_size = 11,   axis_title_size = 12,   title_text_size = 13,   show_genes = NULL,   show_overview = FALSE,   show_exons = FALSE,   max_genes = 200,   sign_thresh = 5e-08,   sign_thresh_color = \"red\",   sign_thresh_label_size = 3.5,   xmax = NULL,   ymin = NULL,   ymax = NULL,   protein_coding_only = FALSE,   region_size = 1e+06,   gene_padding = 1e+05,   angle = 0,   legend_title_size = 12,   legend_text_size = 12,   nudge_x = 0.01,   nudge_y = 0.01,   rsids = NULL,   variant = NULL,   rsids_color = \"gray40\",   legend_name = \"Data:\",   legend_position = \"right\",   chr = NULL,   vline = NULL,   show_gene_names = NULL,   legend_labels = NULL,   gene = NULL,   title = NULL,   label_color = \"gray40\",   region = NULL,   scale = 1,   rsids_with_vline = NULL,   annotate_with_vline = NULL,   sign_thresh_size = 0.5,   unit_main = 7,   unit_gene = 2,   gene_color = NULL,   segment.size = 0.2,   segment.color = \"black\",   segment.linetype = \"solid\",   show_gene_legend = TRUE,   max.overlaps = 10,   extract_plots = FALSE,   label_fontface = \"plain\",   label_family = \"\",   gene_label_fontface = \"plain\",   gene_label_family = \"\",   build = 38,   verbose = NULL,   show_legend = TRUE,   label_alpha = 1,   gene_label_size = NULL,   vline_color = \"grey\",   vline_linetype = \"dashed\",   vline_alpha = 1,   vline_size = 0.5,   log_trans_p = TRUE )"},{"path":"https://kscott-1.github.io/topr/reference/locuszoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a locuszoom-like plot — locuszoom","text":"df Dataframe list dataframes (required columns CHROM,POS,P), upper- lowercase) association results. annotate number (p-value). Display annotation variants p-values threshold ntop integer, number datasets (GWAS results) show top plot xmin, xmax Integer, setting chromosomal range display x-axis size number vector numbers, setting size plot points (default: size=1.2) shape number vector numbers setting shape plotted points alpha number vector numbers setting transparency plotted points label_size number set size plot labels (default: label_size=3) annotate_with string. Annotate variants either Gene_Symbol ID (default: \"Gene_Symbol\") color string vector strings, setting color datapoints plot axis_text_size number, size x y axes tick labels (default: 12) axis_title_size number, size x y title labels (default: 12) title_text_size number, size plot title (default: 13) show_genes logical scalar, show genes instead exons (default show_genes=FALSE) show_overview logical scalar, shows/hides overview plot (default= TRUE) show_exons Deprecated : logical scalar, show exons instead genes (default show_exons=FALSE) max_genes integer, label genes fewer max_genes (default values 200). sign_thresh number vector numbers, setting horizontal significance threshold (default: sign_thresh=5e-8). Set NULL hide significance threshold. sign_thresh_color string vector strings set color/s significance threshold/s sign_thresh_label_size number setting text size label significance thresholds (default text size 3.5) ymin, ymax Integer, min max y-axis, (default values: ymin=0, ymax=max(-log10(df$P))) protein_coding_only logical scalar, TRUE, protein coding genes used annotation region_size integer (default = 20000000) (string represented 200kb 2MB) indicating window size variant labeling. Increase number sparser annotation decrease denser annotation. gene_padding integer representing size region around gene, gene argument used (default = 100000) angle number, angle text label legend_title_size number, size legend title legend_text_size number, size legend text nudge_x number vertically adjust starting position gene label (ggrepel parameter) nudge_y number horizontally adjust starting position gene label (ggrepel parameter) rsids string (rsid) vector strings highlight plot, e.g. rsids=c(\"rs1234, rs45898\") variant string representing variant zoom . Can either rsid, dataframe (columns CHROM,POS,P) rsids_color string, color variants variants_id (default color red) legend_name string, use change name legend (default: None) legend_position string, top,bottom,left right chr string integer, chromosome plot (.e. chr15), required input dataframe contains results one chromosome vline number vector numbers add vertical line plot specific chromosomal position, e.g vline=204000066. Multiple values can provided vector, e.g  vline=c(204000066,100500188) show_gene_names logical scalar, set TRUE, gene names shown even though exceed max_genes count legend_labels string vector strings representing legend labels input datasets gene string representing gene zoom (e.g. gene=FTO) title string set plot title label_color string vector strings. change color gene variant labels region string representing genetic region, e.g. chr1:67038906-67359979 scale number, change size title axes labels ticks time (default : 1) rsids_with_vline string (rsid) vector strings highlight plot rsids vertical lines highlighting positions annotate_with_vline number (p-value). Display annotation vertical lines variants p-values threshold sign_thresh_size number, sets size horizontal significance threshold line (default : 1) unit_main height unit main plot (default = 7) unit_gene height unit gene plot (default= 2 ) gene_color string representing color, can used change color genes/exons geneplot segment.size line segment color (ggrepel argument) segment.color line segment thickness (ggrepel argument) segment.linetype line segment solid, dashed, etc.(ggrepel argument) show_gene_legend logical scalar, set FALSE hide gene legend (default value TRUE) max.overlaps Exclude text labels overlap many things. Defaults 10 (ggrepel argument) extract_plots Logical, FALSE default. Set TRUE extract three plots separately list label_fontface string vector strings. Label font “plain”, “bold”, “italic”, “bold.italic” (ggrepel argument) label_family string vector strings. Label font name (default ggrepel argument \"\") gene_label_fontface Gene label font “plain”, “bold”, “italic”, “bold.italic” (ggrepel argument) gene_label_family Gene label font name (default ggrepel argument \"\") build number representing genome build data frame. Set 37 change build (GRCh37). default build 38 (GRCh38). verbose Logical, set FALSE get suppress printed information show_legend logical scalar, set FALSE hide legend (default : TRUE) label_alpha number vector numbers set transparency plot labels (default: label_alpha=1) gene_label_size number setting size gene labels shown bottom plot vline_color string. color added vertical line/s (default: grey) vline_linetype string. linetype added vertical line/s (default : dashed) vline_alpha number. alpha added vertical line/s (default : 1) vline_size number.size added vertical line/s (default : 0.5) log_trans_p logical scalar (default: TRUE). default p-values input datasets log transformed using -log10. Set argument FALSE p-values datasets already log transformed.","code":""},{"path":"https://kscott-1.github.io/topr/reference/locuszoom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a locuszoom-like plot — locuszoom","text":"plots using egg (https://cran.r-project.org/web/packages/egg/vignettes/Ecosystem.html)","code":""},{"path":"https://kscott-1.github.io/topr/reference/locuszoom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a locuszoom-like plot — locuszoom","text":"","code":"if (FALSE) { # \\dontrun{ locuszoom(R2_CD_UKBB) } # }"},{"path":"https://kscott-1.github.io/topr/reference/manhattan.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Manhattan plot — manhattan","title":"Create a Manhattan plot — manhattan","text":"manhattan() displays association results entire genome Manhattan plot. Required parameter least one dataset (dataframe) containing association data (columns CHROM,POS,P upper lowercase) input parameters optional","code":""},{"path":"https://kscott-1.github.io/topr/reference/manhattan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Manhattan plot — manhattan","text":"","code":"manhattan(   df,   ntop = 4,   title = \"\",   annotate = NULL,   color = NULL,   sign_thresh = 5e-08,   sign_thresh_color = \"red\",   sign_thresh_label_size = 3.5,   label_size = 3.5,   size = 0.8,   shape = 19,   alpha = 1,   highlight_genes_color = \"darkred\",   highlight_genes_ypos = 1.5,   axis_text_size = 12,   axis_title_size = 14,   title_text_size = 15,   legend_title_size = 13,   legend_text_size = 12,   protein_coding_only = TRUE,   angle = 0,   legend_labels = NULL,   chr = NULL,   annotate_with = \"Gene_Symbol\",   region_size = 2e+07,   legend_name = NULL,   legend_position = \"bottom\",   nudge_x = 0.1,   nudge_y = 0.7,   xmin = NULL,   xmax = NULL,   ymin = NULL,   ymax = NULL,   highlight_genes = NULL,   label_color = NULL,   legend_nrow = NULL,   gene_label_size = NULL,   gene_label_angle = 0,   scale = 1,   show_legend = TRUE,   sign_thresh_linetype = \"dashed\",   sign_thresh_size = 0.5,   rsids = NULL,   rsids_color = NULL,   rsids_with_vline = NULL,   annotate_with_vline = NULL,   shades_color = NULL,   shades_alpha = 0.5,   segment.size = 0.2,   segment.color = \"black\",   segment.linetype = \"dashed\",   max.overlaps = 10,   label_fontface = \"plain\",   label_family = \"\",   gene_label_fontface = \"plain\",   gene_label_family = \"\",   build = 38,   verbose = NULL,   label_alpha = 1,   shades_line_alpha = 1,   vline = NULL,   vline_color = \"grey\",   vline_linetype = \"dashed\",   vline_alpha = 1,   vline_size = 0.5,   region = NULL,   theme_grey = FALSE,   xaxis_label = \"Chromosome\",   use_shades = FALSE,   even_no_chr_lightness = 0.8,   get_chr_lengths_from_data = TRUE,   log_trans_p = TRUE,   chr_ticknames = NULL,   show_all_chrticks = FALSE,   hide_chrticks_from_pos = 17,   hide_chrticks_to_pos = NULL,   hide_every_nth_chrtick = 2,   downsample_cutoff = 0.05,   downsample_prop = 0.1 )"},{"path":"https://kscott-1.github.io/topr/reference/manhattan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Manhattan plot — manhattan","text":"df Dataframe list dataframes (required columns CHROM,POS,P), upper- lowercase) association results. ntop integer, number datasets (GWAS results) show top plot title string set plot title annotate number (p-value). Display annotation variants p-values threshold color string vector strings, setting color datapoints plot sign_thresh number vector numbers, setting horizontal significance threshold (default: sign_thresh=5e-8). Set NULL hide significance threshold. sign_thresh_color string vector strings set color/s significance threshold/s sign_thresh_label_size number setting text size label significance thresholds (default text size 3.5) label_size number set size plot labels (default: label_size=3) size number vector numbers, setting size plot points (default: size=1.2) shape number vector numbers setting shape plotted points alpha number vector numbers setting transparency plotted points highlight_genes_color string, color highlighted genes (default: darkred) highlight_genes_ypos integer, controlling y-axis highlighted genes placed (default value 1) axis_text_size number, size x y axes tick labels (default: 12) axis_title_size number, size x y title labels (default: 12) title_text_size number, size plot title (default: 13) legend_title_size number, size legend title legend_text_size number, size legend text protein_coding_only logical scalar, TRUE, protein coding genes used annotation angle number, angle text label legend_labels string vector strings representing legend labels input datasets chr string integer, chromosome plot (.e. chr15), required input dataframe contains results one chromosome annotate_with string. Annotate variants either Gene_Symbol ID (default: \"Gene_Symbol\") region_size integer (default = 20000000) (string represented 200kb 2MB) indicating window size variant labeling. Increase number sparser annotation decrease denser annotation. legend_name string, use change name legend (default: None) legend_position string, top,bottom,left right nudge_x number vertically adjust starting position gene label (ggrepel parameter) nudge_y number horizontally adjust starting position gene label (ggrepel parameter) xmin, xmax Integer, setting chromosomal range display x-axis ymin, ymax Integer, min max y-axis, (default values: ymin=0, ymax=max(-log10(df$P))) highlight_genes string vector strings, gene genes highlight bottom plot label_color string vector strings. change color gene variant labels legend_nrow integer, sets number rows allowed legend labels gene_label_size number setting size gene labels shown bottom plot gene_label_angle number setting angle gene label shown bottom plot (default: 0) scale number, change size title axes labels ticks time (default : 1) show_legend logical scalar, set FALSE hide legend (default : TRUE) sign_thresh_linetype string, line-type horizontal significance threshold (default : dashed) sign_thresh_size number, sets size horizontal significance threshold line (default : 1) rsids string (rsid) vector strings highlight plot, e.g. rsids=c(\"rs1234, rs45898\") rsids_color string, color variants variants_id (default color red) rsids_with_vline string (rsid) vector strings highlight plot rsids vertical lines highlighting positions annotate_with_vline number (p-value). Display annotation vertical lines variants p-values threshold shades_color color rectangles (shades) representing different chromosomes Manhattan plot shades_alpha transparency (alpha) rectangles (shades) segment.size line segment color (ggrepel argument) segment.color line segment thickness (ggrepel argument) segment.linetype line segment solid, dashed, etc.(ggrepel argument) max.overlaps Exclude text labels overlap many things. Defaults 10 (ggrepel argument) label_fontface string vector strings. Label font “plain”, “bold”, “italic”, “bold.italic” (ggrepel argument) label_family string vector strings. Label font name (default ggrepel argument \"\") gene_label_fontface Gene label font “plain”, “bold”, “italic”, “bold.italic” (ggrepel argument) gene_label_family Gene label font name (default ggrepel argument \"\") build number representing genome build data frame. Set 37 change build (GRCh37). default build 38 (GRCh38). verbose logical scalar (default: NULL). Set FALSE suppress printed messages label_alpha number vector numbers set transparency plot labels (default: label_alpha=1) shades_line_alpha transparency (alpha) lines around rectangles (shades) vline number vector numbers add vertical line plot specific chromosomal position, e.g vline=\"chr1:204000066\". Multiple values can provided vector, e.g  vline=c(\"chr1:204000066\",\"chr5:100500188\") vline_color string. color added vertical line/s (default: grey) vline_linetype string. linetype added vertical line/s (default : dashed) vline_alpha number. alpha added vertical line/s (default : 1) vline_size number.size added vertical line/s (default : 0.5) region string representing genetic region, e.g. chr1:67038906-67359979 theme_grey logical scalar (default: FALSE). Use gray rectangles (instead white distinguish chromosomes) xaxis_label string. label x-axis (default: Chromosome) use_shades logical scalar (default: FALSE). Use shades/rectangles distinguish chromosomes even_no_chr_lightness Lightness value even numbered chromosomes. number vector numbers 0 1 (default: 0.8). set 0.5, color shown odd numbered chromosomes displayed. value 0.5 result darker color displayed even numbered chromosomes, whereas value 0.5 results lighter color. get_chr_lengths_from_data logical scalar (default: TRUE). set FALSE, use inbuilt chromosome lengths (hg38), instead chromosome lengths based max position chromosome input dataset/s. log_trans_p logical scalar (default: TRUE). default p-values input datasets log transformed using -log10. Set argument FALSE p-values datasets already log transformed. chr_ticknames vector containing chromosome names displayed x-axis. NULL, following format used: chr_ticknames <- c(1:16, ”,18, ”,20, ”,22, 'X') show_all_chrticks logical scalar (default : FALSE). Set TRUE show chromosome names ticks x-axis hide_chrticks_from_pos number (default: 17). Hide every nth chromosome name x-axis position (chromosome number) hide_chrticks_to_pos number (default: NULL). Hide every nth chromosome name x-axis position (chromosome number). NULL variable set number numeric chromosomes input dataset. hide_every_nth_chrtick number (default: 2). Hide every nth chromosome tick x-axis (hide_chr_ticks_from_pos hide_chr_ticks_to_pos). downsample_cutoff number (default: 0.05) used downsample input dataset prior plotting. Sets fraction high p-value (default: P>0.05) markers display plot. downsample_prop number (default: 0.1) used downsample input dataset prior plotting. proportion variants (10% default) P-values higher downsample_cutoff displayed plot.","code":""},{"path":"https://kscott-1.github.io/topr/reference/manhattan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Manhattan plot — manhattan","text":"ggplot object","code":""},{"path":"https://kscott-1.github.io/topr/reference/manhattan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Manhattan plot — manhattan","text":"","code":"if (FALSE) { # \\dontrun{ manhattan(CD_UKBB) } # }"},{"path":"https://kscott-1.github.io/topr/reference/manhattanExtra.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Manhattan plot highlighting genome-wide significant and suggestive loci — manhattanExtra","title":"Create a Manhattan plot highlighting genome-wide significant and suggestive loci — manhattanExtra","text":"manhattanExtra() displays association results entire genome Manhattan plot, highlighting genome-wide significant suggestive loci. Required parameter least one dataset (dataframe) containing association data (columns CHROM,POS,P upper lowercase) input parameters optional","code":""},{"path":"https://kscott-1.github.io/topr/reference/manhattanExtra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Manhattan plot highlighting genome-wide significant and suggestive loci — manhattanExtra","text":"","code":"manhattanExtra(   df,   genome_wide_thresh = 5e-08,   suggestive_thresh = 1e-06,   flank_size = 1e+06,   region_size = 1e+06,   sign_thresh_color = NULL,   sign_thresh_label_size = NULL,   show_legend = TRUE,   label_fontface = NULL,   nudge_y = NULL,   ymax = NULL,   sign_thresh = NULL,   label_color = NULL,   color = NULL,   legend_labels = NULL,   annotate = NULL,   ... )"},{"path":"https://kscott-1.github.io/topr/reference/manhattanExtra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Manhattan plot highlighting genome-wide significant and suggestive loci — manhattanExtra","text":"df Dataframe, GWAS summary statistics genome_wide_thresh number. P-value threshold genome wide significant loci (5e-08 default) suggestive_thresh number. P-value threshold suggestive loci (1e-06 default) flank_size number (default = 1e6). size flanking region significant suggestitve snps. region_size number (default = 1e6). size region gene annotation. Increase number sparser annotation decrease denser annotation. sign_thresh_color string vector strings set color/s significance threshold/s sign_thresh_label_size number setting text size label significance thresholds (default text size 3.5) show_legend logical scalar, set FALSE hide legend (default : TRUE) label_fontface string vector strings. Label font “plain”, “bold”, “italic”, “bold.italic” (ggrepel argument) nudge_y number horizontally adjust starting position gene label (ggrepel parameter) ymax Integer, max y-axis, (default value: ymax=(max(-log10(df$P)) + max(-log10(df$P)) * .2)) sign_thresh number vector numbers, setting horizontal significance threshold (default: sign_thresh=5e-8). Set NULL hide significance threshold. label_color string vector strings. change color gene variant labels color string vector strings, setting color datapoints plot legend_labels string vector strings representing legend labels input datasets annotate number (p-value). Display annotation variants p-values threshold ... Additional arguments passed plotting functions.","code":""},{"path":"https://kscott-1.github.io/topr/reference/manhattanExtra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Manhattan plot highlighting genome-wide significant and suggestive loci — manhattanExtra","text":"ggplot object","code":""},{"path":"https://kscott-1.github.io/topr/reference/manhattanExtra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Manhattan plot highlighting genome-wide significant and suggestive loci — manhattanExtra","text":"","code":"if (FALSE) { # \\dontrun{ manhattanExtra(df) } # }"},{"path":"https://kscott-1.github.io/topr/reference/match_alleles.html","id":null,"dir":"Reference","previous_headings":"","what":"Match the variants in the snpset by their alleles — match_alleles","title":"Match the variants in the snpset by their alleles — match_alleles","text":"match_alleles() method deprecated removed future versions. use match_by_alleles instead.","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_alleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match the variants in the snpset by their alleles — match_alleles","text":"","code":"match_alleles(df, verbose = F)"},{"path":"https://kscott-1.github.io/topr/reference/match_alleles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match the variants in the snpset by their alleles — match_alleles","text":"df dataframe snpset format (like returned get_snpset() function) verbose logical scalar (default: FALSE). Assign TRUE get information alleles matched .","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_alleles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match the variants in the snpset by their alleles — match_alleles","text":"input dataframe containing variants whith matched alleles snpset","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_alleles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match the variants in the snpset by their alleles — match_alleles","text":"","code":"if (FALSE) { # \\dontrun{ match_alleles(df) } # }"},{"path":"https://kscott-1.github.io/topr/reference/match_by_alleles.html","id":null,"dir":"Reference","previous_headings":"","what":"Match the variants in the snpset by their alleles — match_by_alleles","title":"Match the variants in the snpset by their alleles — match_by_alleles","text":"match_by_alleles()","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_by_alleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match the variants in the snpset by their alleles — match_by_alleles","text":"","code":"match_by_alleles(df, verbose = NULL, show_full_output = FALSE)"},{"path":"https://kscott-1.github.io/topr/reference/match_by_alleles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match the variants in the snpset by their alleles — match_by_alleles","text":"df dataframe snpset format (like returned get_snpset function) verbose logical scalar (default: FALSE). Assign TRUE get information alleles matched . show_full_output logical scalar (default:FALSE). Assign TRUE show full output function","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_by_alleles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match the variants in the snpset by their alleles — match_by_alleles","text":"input dataframe containing variants matched alleles snpset","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_by_alleles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match the variants in the snpset by their alleles — match_by_alleles","text":"","code":"if (FALSE) { # \\dontrun{ CD_UKBB_lead_snps <- get_lead_snps(CD_UKBB) snpset <- get_snpset(CD_UKBB_lead_snps, CD_FINNGEN) match_by_alleles(snpset$found) } # }"},{"path":"https://kscott-1.github.io/topr/reference/match_by_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants that overlap between two datasets — match_by_pos","title":"Get variants that overlap between two datasets — match_by_pos","text":"match_by_pos()","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_by_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants that overlap between two datasets — match_by_pos","text":"","code":"match_by_pos(df1, df2, verbose = NULL, show_full_output = FALSE)"},{"path":"https://kscott-1.github.io/topr/reference/match_by_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variants that overlap between two datasets — match_by_pos","text":"df1 dataframe variants, contain CHROM POS df2 dataframe variants, contain CHROM POS verbose logical scalar (default: FALSE). Assign TRUE get information alleles matched . show_full_output logical scalar (default:FALSE). Assign TRUE show full output function","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_by_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants that overlap between two datasets — match_by_pos","text":"list containing two dataframes, one overlapping snps snps found second input dataset","code":""},{"path":"https://kscott-1.github.io/topr/reference/match_by_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get variants that overlap between two datasets — match_by_pos","text":"","code":"if (FALSE) { # \\dontrun{ CD_UKBB_index_snps <- get_lead_snps(CD_UKBB) match_by_pos(CD_UKBB_index_snps, CD_FINNGEN) } # }"},{"path":"https://kscott-1.github.io/topr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kscott-1.github.io/topr/reference/qqtopr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quantile quantile (QQ) plot — qqtopr","title":"Create a quantile quantile (QQ) plot — qqtopr","text":"qqtopr() displays QQ plots association data. Required parameter least one dataset (dataframe) containing association data (columns CHROM,POS,P","code":""},{"path":"https://kscott-1.github.io/topr/reference/qqtopr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quantile quantile (QQ) plot — qqtopr","text":"","code":"qqtopr(   dat,   scale = 1,   n_variants = 0,   breaks = 15,   title = NULL,   color = get_topr_colors(),   size = 1,   legend_name = \"\",   legend_position = \"right\",   legend_labels = NULL,   axis_text_size = 11,   axis_title_size = 12,   title_text_size = 13,   legend_title_size = 12,   legend_text_size = 12,   verbose = NULL,   diagonal_line_color = \"#808080\" )"},{"path":"https://kscott-1.github.io/topr/reference/qqtopr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quantile quantile (QQ) plot — qqtopr","text":"dat Dataframe list dataframes (required columns P)) association results. scale integer, plot elements scale, default: 1 n_variants integer, total number variants used study breaks number setting breaks axes title string set plot title color string vector strings setting color's input datasets size number vector numbers, setting size plot points (default: size=1.2) legend_name string, use change name legend (default: None) legend_position string, top,bottom,left right legend_labels string vector strings representing legend labels input datasets axis_text_size number, size x y axes tick labels (default: 12) axis_title_size number, size x y title labels (default: 12) title_text_size number, size plot title (default: 13) legend_title_size number, size legend title legend_text_size number, size legend text verbose logical scalar (default: NULL). Set FALSE suppress printed messages diagonal_line_color string setting color diagonal line plot","code":""},{"path":"https://kscott-1.github.io/topr/reference/qqtopr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a quantile quantile (QQ) plot — qqtopr","text":"ggplot","code":""},{"path":"https://kscott-1.github.io/topr/reference/qqtopr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a quantile quantile (QQ) plot — qqtopr","text":"","code":"if (FALSE) { # \\dontrun{ qqtopr(CD_UKBB) } # }"},{"path":"https://kscott-1.github.io/topr/reference/regionplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regionplot — regionplot","title":"Create a regionplot — regionplot","text":"regionplot() displays association results smaller genetic regions within one chromosome. Required parameter least one dataset (dataframe) containing association data (columns CHROM,POS,P upper lowercase) either variant ID, gene name genetic region represented chromosome together start stop positions (either single string three separate arguments). input parameters optional","code":""},{"path":"https://kscott-1.github.io/topr/reference/regionplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regionplot — regionplot","text":"","code":"regionplot(   df,   ntop = 10,   annotate = NULL,   xmin = 0,   size = 2,   shape = 19,   alpha = 1,   label_size = 4,   annotate_with = \"ID\",   color = get_topr_colors(),   axis_text_size = 11,   axis_title_size = 12,   title_text_size = 13,   show_genes = NULL,   show_overview = TRUE,   show_exons = NULL,   max_genes = 200,   sign_thresh = 5e-08,   sign_thresh_color = \"red\",   sign_thresh_label_size = 3.5,   xmax = NULL,   ymin = NULL,   ymax = NULL,   protein_coding_only = FALSE,   region_size = 1e+06,   gene_padding = 1e+05,   angle = 0,   legend_title_size = 12,   legend_text_size = 11,   nudge_x = 0.01,   nudge_y = 0.01,   rsids = NULL,   variant = NULL,   rsids_color = NULL,   legend_name = \"\",   legend_position = \"right\",   chr = NULL,   vline = NULL,   show_gene_names = NULL,   legend_labels = NULL,   gene = NULL,   title = NULL,   label_color = NULL,   locuszoomplot = FALSE,   region = NULL,   legend_nrow = NULL,   gene_label_size = NULL,   scale = 1,   show_legend = TRUE,   sign_thresh_linetype = \"dashed\",   sign_thresh_size = 0.5,   rsids_with_vline = NULL,   annotate_with_vline = NULL,   show_gene_legend = TRUE,   unit_main = 7,   unit_gene = 2,   unit_overview = 1.25,   verbose = NULL,   gene_color = NULL,   segment.size = 0.2,   segment.color = \"black\",   segment.linetype = \"solid\",   max.overlaps = 10,   unit_ratios = NULL,   extract_plots = FALSE,   label_fontface = \"plain\",   label_family = \"\",   gene_label_fontface = \"plain\",   gene_label_family = \"\",   build = 38,   label_alpha = 1,   vline_color = \"grey\",   vline_linetype = \"dashed\",   vline_alpha = 1,   vline_size = 0.5,   log_trans_p = TRUE )"},{"path":"https://kscott-1.github.io/topr/reference/regionplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regionplot — regionplot","text":"df Dataframe list dataframes (required columns CHROM,POS,P), upper- lowercase) association results. ntop integer, number datasets (GWAS results) show top plot annotate number (p-value). Display annotation variants p-values threshold xmin, xmax Integer, setting chromosomal range display x-axis size number vector numbers, setting size plot points (default: size=1.2) shape number vector numbers setting shape plotted points alpha number vector numbers setting transparency plotted points label_size number set size plot labels (default: label_size=3) annotate_with string. Annotate variants either Gene_Symbol ID (default: \"Gene_Symbol\") color string vector strings, setting color datapoints plot axis_text_size number, size x y axes tick labels (default: 12) axis_title_size number, size x y title labels (default: 12) title_text_size number, size plot title (default: 13) show_genes logical scalar, show genes instead exons (default show_genes=FALSE) show_overview logical scalar, shows/hides overview plot (default= TRUE) show_exons Deprecated : logical scalar, show exons instead genes (default show_exons=FALSE) max_genes integer, label genes fewer max_genes (default values 200). sign_thresh number vector numbers, setting horizontal significance threshold (default: sign_thresh=5e-8). Set NULL hide significance threshold. sign_thresh_color string vector strings set color/s significance threshold/s sign_thresh_label_size number setting text size label significance thresholds (default text size 3.5) ymin, ymax Integer, min max y-axis, (default values: ymin=0, ymax=max(-log10(df$P))) protein_coding_only logical scalar, TRUE, protein coding genes used annotation region_size integer (default = 20000000) (string represented 200kb 2MB) indicating window size variant labeling. Increase number sparser annotation decrease denser annotation. gene_padding integer representing size region around gene, gene argument used (default = 100000) angle number, angle text label legend_title_size number, size legend title legend_text_size number, size legend text nudge_x number vertically adjust starting position gene label (ggrepel parameter) nudge_y number horizontally adjust starting position gene label (ggrepel parameter) rsids string (rsid) vector strings highlight plot, e.g. rsids=c(\"rs1234, rs45898\") variant string representing variant zoom . Can either rsid, dataframe (columns CHROM,POS,P) rsids_color string, color variants variants_id (default color red) legend_name string, use change name legend (default: None) legend_position string, top,bottom,left right chr string integer, chromosome plot (.e. chr15), required input dataframe contains results one chromosome vline number vector numbers add vertical line plot specific chromosomal position, e.g vline=204000066. Multiple values can provided vector, e.g  vline=c(204000066,100500188) show_gene_names logical scalar, set TRUE, gene names shown even though exceed max_genes count legend_labels string vector strings representing legend labels input datasets gene string representing gene zoom (e.g. gene=FTO) title string set plot title label_color string vector strings. change color gene variant labels locuszoomplot logical scalar set FALSE. set TRUE calling locuszoom function region string representing genetic region, e.g. chr1:67038906-67359979 legend_nrow integer, sets number rows allowed legend labels gene_label_size number setting size gene labels shown bottom plot scale number, change size title axes labels ticks time (default : 1) show_legend logical scalar, set FALSE hide legend (default : TRUE) sign_thresh_linetype string, line-type horizontal significance threshold (default : dashed) sign_thresh_size number, sets size horizontal significance threshold line (default : 1) rsids_with_vline string (rsid) vector strings highlight plot rsids vertical lines highlighting positions annotate_with_vline number (p-value). Display annotation vertical lines variants p-values threshold show_gene_legend logical scalar, set FALSE hide gene legend (default value TRUE) unit_main height unit main plot (default = 7) unit_gene height unit gene plot (default= 2 ) unit_overview height unit overview plot (default = 1.25) verbose Logical, set FALSE get suppress printed information gene_color string representing color, can used change color genes/exons geneplot segment.size line segment color (ggrepel argument) segment.color line segment thickness (ggrepel argument) segment.linetype line segment solid, dashed, etc.(ggrepel argument) max.overlaps Exclude text labels overlap many things. Defaults 10 (ggrepel argument) unit_ratios string three numbers separated \":\", overview, main gene plots height ratios e.g  1.25:7:2 extract_plots Logical, FALSE default. Set TRUE extract three plots separately list label_fontface string vector strings. Label font “plain”, “bold”, “italic”, “bold.italic” (ggrepel argument) label_family string vector strings. Label font name (default ggrepel argument \"\") gene_label_fontface Gene label font “plain”, “bold”, “italic”, “bold.italic” (ggrepel argument) gene_label_family Gene label font name (default ggrepel argument \"\") build number representing genome build data frame. Set 37 change build (GRCh37). default build 38 (GRCh38). label_alpha number vector numbers set transparency plot labels (default: label_alpha=1) vline_color string. color added vertical line/s (default: grey) vline_linetype string. linetype added vertical line/s (default : dashed) vline_alpha number. alpha added vertical line/s (default : 1) vline_size number.size added vertical line/s (default : 0.5) log_trans_p logical scalar (default: TRUE). default p-values input datasets log transformed using -log10. Set argument FALSE p-values datasets already log transformed.","code":""},{"path":"https://kscott-1.github.io/topr/reference/regionplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regionplot — regionplot","text":"plots within ggplotGrobs, arranged egg::gtable_frame","code":""},{"path":"https://kscott-1.github.io/topr/reference/regionplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a regionplot — regionplot","text":"","code":"if (FALSE) { # \\dontrun{ regionplot(CD_UKBB, gene=\"IL23R\") } # }"},{"path":"https://kscott-1.github.io/topr/reference/topr.html","id":null,"dir":"Reference","previous_headings":"","what":"topr — topr","title":"topr — topr","text":"package viewing annotating genetic association data","code":""},{"path":"https://kscott-1.github.io/topr/reference/topr.html","id":"topr-functions","dir":"Reference","previous_headings":"","what":"topr functions","title":"topr — topr","text":"main plotting functions : manhattan create Manhattan plot association results regionplot create regional plots association results smaller genetic regions","code":""},{"path":[]},{"path":"https://kscott-1.github.io/topr/reference/topr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"topr — topr","text":"Maintainer: Thorhildur Juliusdottir totajuliusd@gmail.com [copyright holder] Authors: Andri Stefansson andrimarstefansson@gmail.com","code":""},{"path":"https://kscott-1.github.io/topr/reference/topr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"topr — topr","text":"","code":"library(topr) # Create a manhattan plot using manhattan(CD_UKBB)   # Create a regional plot regionplot(CD_UKBB, gene=\"IL23R\") #> [1] \"Zoomed to region:  1:67038907-67359979\""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-202","dir":"Changelog","previous_headings":"","what":"topr 2.0.2","title":"topr 2.0.2","text":"CRAN release: 2024-06-19 Parameters added downsampling/thinning dataset prior plotting manhattan Locuszoom plot updated include variants missing R2 values vline_color bug fix Improved get_lead_snp functionality get_sign_and_sugg_loci function added extracting genome-wide significant suggestive loci manhattanExtra function added highlighting genome-wide significant suggestive loci","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-201","dir":"Changelog","previous_headings":"","what":"topr 2.0.1","title":"topr 2.0.1","text":"CRAN release: 2024-03-15 REF ALT error message fixed p-values .Machine$double.xmin input dataset limits= argument added scale_color_manual ggplot2 function work expected ggplot2 v3.5","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-200","dir":"Changelog","previous_headings":"","what":"topr 2.0.0","title":"topr 2.0.0","text":"CRAN release: 2024-02-04 topr can now used species argument added set color diagonal line qqtopr Argument chr_ticknames, show_all_chrticks, hide_chrticks_from_pos, hide_chrticks_to_pos hide_every_nth_chrtick added Manhattan function control x-axis labels log_trans_p argument added input datasets already log-transformed Inclusion chromosomes Y MT build hg38","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-1110","dir":"Changelog","previous_headings":"","what":"topr 1.1.10","title":"topr 1.1.10","text":"CRAN release: 2023-09-13 Argument get_chr_lengths_from_data added Manhattan function number chromosomes chromosome lengths can extracted input data. Manhattan plot displays many chromosomes input data.","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-119","dir":"Changelog","previous_headings":"","what":"topr 1.1.9","title":"topr 1.1.9","text":"CRAN release: 2023-09-06 Correct gene annotation used regionplot using build 37 Fix partly incorrect coloring association points near end beginning chromosome.","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-118","dir":"Changelog","previous_headings":"","what":"topr 1.1.8","title":"topr 1.1.8","text":"CRAN release: 2023-08-26 Missing shade added chr22 Manhattan plot chrX included dataset.","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-117","dir":"Changelog","previous_headings":"","what":"topr 1.1.7","title":"topr 1.1.7","text":"CRAN release: 2023-05-23 Placeholder added genes region display Fix manhattan function handle one chromosome datasets xaxis_label added input argument manhattan plot function","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-116","dir":"Changelog","previous_headings":"","what":"topr 1.1.6","title":"topr 1.1.6","text":"CRAN release: 2023-04-26 Updated documentation","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-115","dir":"Changelog","previous_headings":"","what":"topr 1.1.5","title":"topr 1.1.5","text":"CRAN release: 2023-04-25 Fix chrX displaying genes regionplot","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-114","dir":"Changelog","previous_headings":"","what":"topr 1.1.4","title":"topr 1.1.4","text":"CRAN release: 2023-03-09 Default significance threshold changed 5e-9 5e-8 Updated README","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-113","dir":"Changelog","previous_headings":"","what":"topr 1.1.3","title":"topr 1.1.3","text":"CRAN release: 2023-02-12 Fix make topr compatible next version dplyr","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-112","dir":"Changelog","previous_headings":"","what":"topr 1.1.2","title":"topr 1.1.2","text":"CRAN release: 2023-01-13 scale parameter annotate_with_vline fixed Manhattan plot changed conventional two-color display argument theme_grey can set TRUE make Manhattan plot look like older versions topr","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-111","dir":"Changelog","previous_headings":"","what":"topr 1.1.1","title":"topr 1.1.1","text":"CRAN release: 2022-11-04 Minor bug fix plot colors legends plotting multiple datasets region argument added manhattan function","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-110","dir":"Changelog","previous_headings":"","what":"topr 1.1.0","title":"topr 1.1.0","text":"CRAN release: 2022-10-25 Update increase control plot aesthetics variant labeling minor bug fixes Includes option choose genome builds 38 (GRCh38.p13) 37 (GRCh37.p13).","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-100","dir":"Changelog","previous_headings":"","what":"topr 1.0.0","title":"topr 1.0.0","text":"CRAN release: 2022-01-12 First official release topr","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-001","dir":"Changelog","previous_headings":"","what":"topr 0.0.1","title":"topr 0.0.1","text":"First version including locuszoom plot","code":""},{"path":"https://kscott-1.github.io/topr/news/index.html","id":"topr-000","dir":"Changelog","previous_headings":"","what":"topr 0.0.0","title":"topr 0.0.0","text":"First version submitted github","code":""}]
